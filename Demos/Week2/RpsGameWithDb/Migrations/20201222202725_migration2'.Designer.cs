// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpsGameWithDb;

namespace RpsGameWithDb.Migrations
{
    [DbContext(typeof(RpsDbContext))]
    [Migration("20201222202725_migration2'")]
    partial class migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("RpsGameWithDb.Match", b =>
                {
                    b.Property<Guid>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Player1PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Player2PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("p1RoundWins")
                        .HasColumnType("int");

                    b.Property<int>("p2RoundWins")
                        .HasColumnType("int");

                    b.Property<int>("ties")
                        .HasColumnType("int");

                    b.HasKey("MatchId");

                    b.HasIndex("Player1PlayerId");

                    b.HasIndex("Player2PlayerId");

                    b.ToTable("matches");
                });

            modelBuilder.Entity("RpsGameWithDb.Player", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numLosses")
                        .HasColumnType("int");

                    b.Property<int>("numWins")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.ToTable("players");
                });

            modelBuilder.Entity("RpsGameWithDb.Round", b =>
                {
                    b.Property<Guid>("RoundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Player1Choice")
                        .HasColumnType("int");

                    b.Property<int>("Player2Choice")
                        .HasColumnType("int");

                    b.Property<Guid?>("WinningPlayerPlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoundId");

                    b.HasIndex("WinningPlayerPlayerId");

                    b.ToTable("rounds");
                });

            modelBuilder.Entity("RpsGameWithDb.Match", b =>
                {
                    b.HasOne("RpsGameWithDb.Player", "Player1")
                        .WithMany()
                        .HasForeignKey("Player1PlayerId");

                    b.HasOne("RpsGameWithDb.Player", "Player2")
                        .WithMany()
                        .HasForeignKey("Player2PlayerId");

                    b.Navigation("Player1");

                    b.Navigation("Player2");
                });

            modelBuilder.Entity("RpsGameWithDb.Round", b =>
                {
                    b.HasOne("RpsGameWithDb.Player", "WinningPlayer")
                        .WithMany()
                        .HasForeignKey("WinningPlayerPlayerId");

                    b.Navigation("WinningPlayer");
                });
#pragma warning restore 612, 618
        }
    }
}
